buildscript {
    dependencies {
        classpath 'org.jooq:jooq-codegen:3.13.1'
        classpath 'com.h2database:h2:1.4.200'
    }
}

plugins {
    id "org.springframework.boot"
    id 'nu.studer.jooq' version '4.1'
    id 'java'
}

dependencies {
    compile project(':tw-wallet-common')
    implementation Deps.springBootStarterAmqp
    implementation Deps.springBootStarterDataJdbc
    implementation Deps.springBootStarterWeb
    implementation Deps.springfoxSwagger2
    implementation Deps.springfoxSwaggerUI
    implementation Deps.slf4j
    implementation Deps.logbackCore
    implementation Deps.logbackClassic
    implementation Deps.jacksonCore
    implementation Deps.jacksonDatabind
    implementation Deps.jacksonAnnotations
    implementation Deps.jacksonDatatypeJdk8
    implementation Deps.jacksonDatatypeJsr310
    implementation Deps.guava
    implementation Deps.postgresql
    implementation Deps.jooq
    implementation Deps.jooqCodegen
    implementation Deps.modelmapper
    implementation Deps.modelmapperJooq
    implementation Deps.w3j
    implementation Deps.w3jContract
    implementation Deps.commonsLang3
    implementation Deps.commonsCollections4
    implementation Deps.okhttp
    implementation Deps.okhttpUrlConnection
    implementation Deps.loggingInterceptor
    implementation Deps.failsafe
    compileOnly Deps.lombok
    annotationProcessor Deps.lombok
    annotationProcessor Deps.springBootConfigurationProcessor
    testImplementation Deps.h2

    jooqRuntime Deps.postgresql
    jooqRuntime Deps.h2
}

test {
    useJUnitPlatform()
}


apply from: "gradle/enviroments.gradle"

jooq {
    version = '3.13.1'
    edition = 'OSS'
    generateSchemaSourceOnCompilation = false
    wallet(sourceSets.main) {
        jdbc {
            driver = "${environment.spring.datasource.'driver-class-name'}"
            url = "${environment.spring.datasource.url}"
            user = "${environment.spring.datasource.username}"
            password = "${environment.spring.datasource.password}"
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = "${environment.spring.jooq.database.name}"
                inputSchema = "${environment.spring.jooq.database.inputSchema}"
                forcedTypes {
                    forcedType {
                        userType='com.fasterxml.jackson.databind.JsonNode'
                        binding='com.thoughtworks.common.config.PostgresJSONJacksonJsonNodeBinding'
                        includeExpression = '.*\\.sub.*'
                        includeTypes='.*'
                    }
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = false
                fluentSetters = true
                daos = false
                pojosEqualsAndHashCode = false
                javaTimeTypes = true
            }
            target {
                packageName = 'com.thoughtworks.wallet.gen'
                directory = "src/generated/java"
            }
        }
    }
}

springBoot {
    mainClassName = 'com.thoughtworks.wallet.TWWalletSync'
}