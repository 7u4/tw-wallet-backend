/*
 * This file is generated by jOOQ.
 */
package com.thoughtworks.wallet.gen.tables;


import com.fasterxml.jackson.databind.JsonNode;
import com.thoughtworks.common.config.PostgresJSONJacksonJsonNodeBinding;
import com.thoughtworks.wallet.gen.Keys;
import com.thoughtworks.wallet.gen.Public;
import com.thoughtworks.wallet.gen.tables.records.TblHealthyVerificationClaimRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblHealthyVerificationClaim extends TableImpl<TblHealthyVerificationClaimRecord> {

    private static final long serialVersionUID = 1523248536;

    /**
     * The reference instance of <code>public.tbl_healthy_verification_claim</code>
     */
    public static final TblHealthyVerificationClaim TBL_HEALTHY_VERIFICATION_CLAIM = new TblHealthyVerificationClaim();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblHealthyVerificationClaimRecord> getRecordType() {
        return TblHealthyVerificationClaimRecord.class;
    }

    /**
     * The column <code>public.tbl_healthy_verification_claim.id</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.tbl_healthy_verification_claim.ver</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, String> VER = createField(DSL.name("ver"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>public.tbl_healthy_verification_claim.context</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, String> CONTEXT = createField(DSL.name("context"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.tbl_healthy_verification_claim.iss</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, String> ISS = createField(DSL.name("iss"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.tbl_healthy_verification_claim.iat</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, Long> IAT = createField(DSL.name("iat"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tbl_healthy_verification_claim.exp</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, Long> EXP = createField(DSL.name("exp"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tbl_healthy_verification_claim.typ</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, String> TYP = createField(DSL.name("typ"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>public.tbl_healthy_verification_claim.sub</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, JsonNode> SUB = createField(DSL.name("sub"), org.jooq.impl.SQLDataType.JSON.nullable(false), this, "", new PostgresJSONJacksonJsonNodeBinding());

    /**
     * The column <code>public.tbl_healthy_verification_claim.owner</code>.
     */
    public final TableField<TblHealthyVerificationClaimRecord, String> OWNER = createField(DSL.name("owner"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>public.tbl_healthy_verification_claim</code> table reference
     */
    public TblHealthyVerificationClaim() {
        this(DSL.name("tbl_healthy_verification_claim"), null);
    }

    /**
     * Create an aliased <code>public.tbl_healthy_verification_claim</code> table reference
     */
    public TblHealthyVerificationClaim(String alias) {
        this(DSL.name(alias), TBL_HEALTHY_VERIFICATION_CLAIM);
    }

    /**
     * Create an aliased <code>public.tbl_healthy_verification_claim</code> table reference
     */
    public TblHealthyVerificationClaim(Name alias) {
        this(alias, TBL_HEALTHY_VERIFICATION_CLAIM);
    }

    private TblHealthyVerificationClaim(Name alias, Table<TblHealthyVerificationClaimRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblHealthyVerificationClaim(Name alias, Table<TblHealthyVerificationClaimRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TblHealthyVerificationClaim(Table<O> child, ForeignKey<O, TblHealthyVerificationClaimRecord> key) {
        super(child, key, TBL_HEALTHY_VERIFICATION_CLAIM);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<TblHealthyVerificationClaimRecord> getPrimaryKey() {
        return Keys.TBL_HEALTHY_VERIFICATION_CLAIM_PKEY;
    }

    @Override
    public List<UniqueKey<TblHealthyVerificationClaimRecord>> getKeys() {
        return Arrays.<UniqueKey<TblHealthyVerificationClaimRecord>>asList(Keys.TBL_HEALTHY_VERIFICATION_CLAIM_PKEY);
    }

    @Override
    public TblHealthyVerificationClaim as(String alias) {
        return new TblHealthyVerificationClaim(DSL.name(alias), this);
    }

    @Override
    public TblHealthyVerificationClaim as(Name alias) {
        return new TblHealthyVerificationClaim(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TblHealthyVerificationClaim rename(String name) {
        return new TblHealthyVerificationClaim(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TblHealthyVerificationClaim rename(Name name) {
        return new TblHealthyVerificationClaim(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, Long, Long, String, JsonNode, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
