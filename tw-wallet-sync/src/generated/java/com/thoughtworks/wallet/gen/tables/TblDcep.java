/*
 * This file is generated by jOOQ.
 */
package com.thoughtworks.wallet.gen.tables;


import com.thoughtworks.wallet.gen.Indexes;
import com.thoughtworks.wallet.gen.Keys;
import com.thoughtworks.wallet.gen.Public;
import com.thoughtworks.wallet.gen.tables.records.TblDcepRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblDcep extends TableImpl<TblDcepRecord> {

    private static final long serialVersionUID = 946231754;

    /**
     * The reference instance of <code>public.tbl_dcep</code>
     */
    public static final TblDcep TBL_DCEP = new TblDcep();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblDcepRecord> getRecordType() {
        return TblDcepRecord.class;
    }

    /**
     * The column <code>public.tbl_dcep.id</code>.
     */
    public final TableField<TblDcepRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tbl_dcep.serial_number</code>.
     */
    public final TableField<TblDcepRecord, String> SERIAL_NUMBER = createField(DSL.name("serial_number"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.tbl_dcep.owner</code>.
     */
    public final TableField<TblDcepRecord, String> OWNER = createField(DSL.name("owner"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.tbl_dcep.money_type</code>.
     */
    public final TableField<TblDcepRecord, String> MONEY_TYPE = createField(DSL.name("money_type"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>public.tbl_dcep.create_time</code>.
     */
    public final TableField<TblDcepRecord, OffsetDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE)), this, "");

    /**
     * Create a <code>public.tbl_dcep</code> table reference
     */
    public TblDcep() {
        this(DSL.name("tbl_dcep"), null);
    }

    /**
     * Create an aliased <code>public.tbl_dcep</code> table reference
     */
    public TblDcep(String alias) {
        this(DSL.name(alias), TBL_DCEP);
    }

    /**
     * Create an aliased <code>public.tbl_dcep</code> table reference
     */
    public TblDcep(Name alias) {
        this(alias, TBL_DCEP);
    }

    private TblDcep(Name alias, Table<TblDcepRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblDcep(Name alias, Table<TblDcepRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TblDcep(Table<O> child, ForeignKey<O, TblDcepRecord> key) {
        super(child, key, TBL_DCEP);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TBL_BLOCKS_OWNER_INDEX);
    }

    @Override
    public UniqueKey<TblDcepRecord> getPrimaryKey() {
        return Keys.TBL_DCEP_PKEY;
    }

    @Override
    public List<UniqueKey<TblDcepRecord>> getKeys() {
        return Arrays.<UniqueKey<TblDcepRecord>>asList(Keys.TBL_DCEP_PKEY);
    }

    @Override
    public TblDcep as(String alias) {
        return new TblDcep(DSL.name(alias), this);
    }

    @Override
    public TblDcep as(Name alias) {
        return new TblDcep(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TblDcep rename(String name) {
        return new TblDcep(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TblDcep rename(Name name) {
        return new TblDcep(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
