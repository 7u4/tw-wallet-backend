buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    // Apply the java plugin to add support for Java
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'


    group = 'com.thoughtworks'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        mavenCentral()
    }

    dependencies {
        testImplementation(Deps.springBootStarterTest) {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }


    sourceSets {
        main {
            java {
                srcDirs = ["src/main/java", "src/generated/java"]
            }
            resources {
                srcDirs = ["src/main/resources"]
            }
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }
}

task installLocalGitHook() {
    def root = rootProject.rootDir.toString()
    def path = root + "/.git/hooks/pre-commit"
    File preCommit = new File(path)
    if (!preCommit.exists()) {
        exec {
            workingDir root
            commandLine "sh", "scripts/install-talisman.sh", "pre-commit"
        }
    }
    def content = preCommit.text
    if (content && !content.contains("exec < /dev/tty")) {
        content = content.replace("#!/bin/bash\n", "#!/bin/bash\nexec < /dev/tty\n")
        preCommit.write(content)
    }
}

build.dependsOn installLocalGitHook