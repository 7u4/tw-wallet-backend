/*
 * This file is generated by jOOQ.
 */
package com.thoughtworks.wallet.gen.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblTxnDetail implements Serializable {

    private static final long serialVersionUID = 442443020;

    private final String        txnHash;
    private final Short         txnType;
    private final LocalDateTime txnTime;
    private final Integer       height;
    private final Object        amount;
    private final String        assetName;
    private final String        fromAddress;
    private final String        toAddress;
    private final Integer       blockIndex;
    private final Integer       txnIndex;
    private final Short         confirmFlag;
    private final Short         eventType;
    private final String        contractHash;

    public TblTxnDetail(TblTxnDetail value) {
        this.txnHash = value.txnHash;
        this.txnType = value.txnType;
        this.txnTime = value.txnTime;
        this.height = value.height;
        this.amount = value.amount;
        this.assetName = value.assetName;
        this.fromAddress = value.fromAddress;
        this.toAddress = value.toAddress;
        this.blockIndex = value.blockIndex;
        this.txnIndex = value.txnIndex;
        this.confirmFlag = value.confirmFlag;
        this.eventType = value.eventType;
        this.contractHash = value.contractHash;
    }

    public TblTxnDetail(
        String        txnHash,
        Short         txnType,
        LocalDateTime txnTime,
        Integer       height,
        Object        amount,
        String        assetName,
        String        fromAddress,
        String        toAddress,
        Integer       blockIndex,
        Integer       txnIndex,
        Short         confirmFlag,
        Short         eventType,
        String        contractHash
    ) {
        this.txnHash = txnHash;
        this.txnType = txnType;
        this.txnTime = txnTime;
        this.height = height;
        this.amount = amount;
        this.assetName = assetName;
        this.fromAddress = fromAddress;
        this.toAddress = toAddress;
        this.blockIndex = blockIndex;
        this.txnIndex = txnIndex;
        this.confirmFlag = confirmFlag;
        this.eventType = eventType;
        this.contractHash = contractHash;
    }

    public String getTxnHash() {
        return this.txnHash;
    }

    public Short getTxnType() {
        return this.txnType;
    }

    public LocalDateTime getTxnTime() {
        return this.txnTime;
    }

    public Integer getHeight() {
        return this.height;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Object getAmount() {
        return this.amount;
    }

    public String getAssetName() {
        return this.assetName;
    }

    public String getFromAddress() {
        return this.fromAddress;
    }

    public String getToAddress() {
        return this.toAddress;
    }

    public Integer getBlockIndex() {
        return this.blockIndex;
    }

    public Integer getTxnIndex() {
        return this.txnIndex;
    }

    public Short getConfirmFlag() {
        return this.confirmFlag;
    }

    public Short getEventType() {
        return this.eventType;
    }

    public String getContractHash() {
        return this.contractHash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TblTxnDetail other = (TblTxnDetail) obj;
        if (txnHash == null) {
            if (other.txnHash != null)
                return false;
        }
        else if (!txnHash.equals(other.txnHash))
            return false;
        if (txnType == null) {
            if (other.txnType != null)
                return false;
        }
        else if (!txnType.equals(other.txnType))
            return false;
        if (txnTime == null) {
            if (other.txnTime != null)
                return false;
        }
        else if (!txnTime.equals(other.txnTime))
            return false;
        if (height == null) {
            if (other.height != null)
                return false;
        }
        else if (!height.equals(other.height))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (assetName == null) {
            if (other.assetName != null)
                return false;
        }
        else if (!assetName.equals(other.assetName))
            return false;
        if (fromAddress == null) {
            if (other.fromAddress != null)
                return false;
        }
        else if (!fromAddress.equals(other.fromAddress))
            return false;
        if (toAddress == null) {
            if (other.toAddress != null)
                return false;
        }
        else if (!toAddress.equals(other.toAddress))
            return false;
        if (blockIndex == null) {
            if (other.blockIndex != null)
                return false;
        }
        else if (!blockIndex.equals(other.blockIndex))
            return false;
        if (txnIndex == null) {
            if (other.txnIndex != null)
                return false;
        }
        else if (!txnIndex.equals(other.txnIndex))
            return false;
        if (confirmFlag == null) {
            if (other.confirmFlag != null)
                return false;
        }
        else if (!confirmFlag.equals(other.confirmFlag))
            return false;
        if (eventType == null) {
            if (other.eventType != null)
                return false;
        }
        else if (!eventType.equals(other.eventType))
            return false;
        if (contractHash == null) {
            if (other.contractHash != null)
                return false;
        }
        else if (!contractHash.equals(other.contractHash))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.txnHash == null) ? 0 : this.txnHash.hashCode());
        result = prime * result + ((this.txnType == null) ? 0 : this.txnType.hashCode());
        result = prime * result + ((this.txnTime == null) ? 0 : this.txnTime.hashCode());
        result = prime * result + ((this.height == null) ? 0 : this.height.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.assetName == null) ? 0 : this.assetName.hashCode());
        result = prime * result + ((this.fromAddress == null) ? 0 : this.fromAddress.hashCode());
        result = prime * result + ((this.toAddress == null) ? 0 : this.toAddress.hashCode());
        result = prime * result + ((this.blockIndex == null) ? 0 : this.blockIndex.hashCode());
        result = prime * result + ((this.txnIndex == null) ? 0 : this.txnIndex.hashCode());
        result = prime * result + ((this.confirmFlag == null) ? 0 : this.confirmFlag.hashCode());
        result = prime * result + ((this.eventType == null) ? 0 : this.eventType.hashCode());
        result = prime * result + ((this.contractHash == null) ? 0 : this.contractHash.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TblTxnDetail (");

        sb.append(txnHash);
        sb.append(", ").append(txnType);
        sb.append(", ").append(txnTime);
        sb.append(", ").append(height);
        sb.append(", ").append(amount);
        sb.append(", ").append(assetName);
        sb.append(", ").append(fromAddress);
        sb.append(", ").append(toAddress);
        sb.append(", ").append(blockIndex);
        sb.append(", ").append(txnIndex);
        sb.append(", ").append(confirmFlag);
        sb.append(", ").append(eventType);
        sb.append(", ").append(contractHash);

        sb.append(")");
        return sb.toString();
    }
}
